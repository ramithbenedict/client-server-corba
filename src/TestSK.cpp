// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "Test.h"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_2;



void
Test::Message::operator>>= (cdrStream &_n) const
{
  _n.marshalString(title,0);
  _n.marshalString(author,0);
  _n.marshalString(date,0);
  _n.marshalString(body,0);

}

void
Test::Message::operator<<= (cdrStream &_n)
{
  title = _n.unmarshalString(0);
  author = _n.unmarshalString(0);
  date = _n.unmarshalString(0);
  body = _n.unmarshalString(0);

}

Test::Forum_ptr Test::Forum_Helper::_nil() {
  return ::Test::Forum::_nil();
}

::CORBA::Boolean Test::Forum_Helper::is_nil(::Test::Forum_ptr p) {
  return ::CORBA::is_nil(p);

}

void Test::Forum_Helper::release(::Test::Forum_ptr p) {
  ::CORBA::release(p);
}

void Test::Forum_Helper::marshalObjRef(::Test::Forum_ptr obj, cdrStream& s) {
  ::Test::Forum::_marshalObjRef(obj, s);
}

Test::Forum_ptr Test::Forum_Helper::unmarshalObjRef(cdrStream& s) {
  return ::Test::Forum::_unmarshalObjRef(s);
}

void Test::Forum_Helper::duplicate(::Test::Forum_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

Test::Forum_ptr
Test::Forum::_duplicate(::Test::Forum_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

Test::Forum_ptr
Test::Forum::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


Test::Forum_ptr
Test::Forum::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

Test::Forum_ptr
Test::Forum::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_Forum _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_Forum* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_Forum;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* Test::Forum::_PD_repoId = "IDL:Test/Forum:1.0";


Test::_objref_Forum::~_objref_Forum() {
  
}


Test::_objref_Forum::_objref_Forum(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::Test::Forum::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
Test::_objref_Forum::_ptrToObjRef(const char* id)
{
  if( id == ::Test::Forum::_PD_repoId )
    return (::Test::Forum_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::Test::Forum::_PD_repoId) )
    return (::Test::Forum_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cTest_mMessage
class _0RL_cd_152d68099248a14c_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_152d68099248a14c_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  Test::Message_var arg_0_;
  const Test::Message* arg_0;
  ::CORBA::Boolean result;
};

void _0RL_cd_152d68099248a14c_00000000::marshalArguments(cdrStream& _n)
{
  (const Test::Message&) *arg_0 >>= _n;

}

void _0RL_cd_152d68099248a14c_00000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new Test::Message;
  (Test::Message&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();

}

void _0RL_cd_152d68099248a14c_00000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_152d68099248a14c_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_152d68099248a14c_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_152d68099248a14c_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_152d68099248a14c_00000000* tcd = (_0RL_cd_152d68099248a14c_00000000*)cd;
  Test::_impl_Forum* impl = (Test::_impl_Forum*) svnt->_ptrToInterface(Test::Forum::_PD_repoId);
  tcd->result = impl->postMessage(*tcd->arg_0);


}

::CORBA::Boolean Test::_objref_Forum::postMessage(const ::Test::Message& m)
{
  _0RL_cd_152d68099248a14c_00000000 _call_desc(_0RL_lcfn_152d68099248a14c_10000000, "postMessage", 12);
  _call_desc.arg_0 = &(::Test::Message&) m;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cTest_mMessage_i_cstring
class _0RL_cd_152d68099248a14c_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_152d68099248a14c_20000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
  Test::Message_var result;
};

void _0RL_cd_152d68099248a14c_20000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_152d68099248a14c_20000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

void _0RL_cd_152d68099248a14c_20000000::marshalReturnedValues(cdrStream& _n)
{
  (const Test::Message&) result >>= _n;

}

void _0RL_cd_152d68099248a14c_20000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new Test::Message;
  (Test::Message&)result <<= _n;

}

const char* const _0RL_cd_152d68099248a14c_20000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_152d68099248a14c_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_152d68099248a14c_20000000* tcd = (_0RL_cd_152d68099248a14c_20000000*)cd;
  Test::_impl_Forum* impl = (Test::_impl_Forum*) svnt->_ptrToInterface(Test::Forum::_PD_repoId);
  tcd->result = impl->getMessage(tcd->arg_0);


}

Test::Message* Test::_objref_Forum::getMessage(const char* title)
{
  _0RL_cd_152d68099248a14c_20000000 _call_desc(_0RL_lcfn_152d68099248a14c_30000000, "getMessage", 11);
  _call_desc.arg_0 = title;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cstring
class _0RL_cd_152d68099248a14c_40000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_152d68099248a14c_40000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
  ::CORBA::Boolean result;
};

void _0RL_cd_152d68099248a14c_40000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_152d68099248a14c_40000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

void _0RL_cd_152d68099248a14c_40000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_152d68099248a14c_40000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_152d68099248a14c_40000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_152d68099248a14c_50000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_152d68099248a14c_40000000* tcd = (_0RL_cd_152d68099248a14c_40000000*)cd;
  Test::_impl_Forum* impl = (Test::_impl_Forum*) svnt->_ptrToInterface(Test::Forum::_PD_repoId);
  tcd->result = impl->removeMessage(tcd->arg_0);


}

::CORBA::Boolean Test::_objref_Forum::removeMessage(const char* title)
{
  _0RL_cd_152d68099248a14c_40000000 _call_desc(_0RL_lcfn_152d68099248a14c_50000000, "removeMessage", 14);
  _call_desc.arg_0 = title;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cstring
class _0RL_cd_152d68099248a14c_60000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_152d68099248a14c_60000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var result;
};

void _0RL_cd_152d68099248a14c_60000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalString(result,0);

}

void _0RL_cd_152d68099248a14c_60000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalString(0);

}

const char* const _0RL_cd_152d68099248a14c_60000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_152d68099248a14c_70000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_152d68099248a14c_60000000* tcd = (_0RL_cd_152d68099248a14c_60000000*)cd;
  Test::_impl_Forum* impl = (Test::_impl_Forum*) svnt->_ptrToInterface(Test::Forum::_PD_repoId);
  tcd->result = impl->theme();


}

char* Test::_objref_Forum::theme()
{
  _0RL_cd_152d68099248a14c_60000000 _call_desc(_0RL_lcfn_152d68099248a14c_70000000, "_get_theme", 11);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_152d68099248a14c_80000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_152d68099248a14c_60000000* tcd = (_0RL_cd_152d68099248a14c_60000000*)cd;
  Test::_impl_Forum* impl = (Test::_impl_Forum*) svnt->_ptrToInterface(Test::Forum::_PD_repoId);
  tcd->result = impl->moderator();


}

char* Test::_objref_Forum::moderator()
{
  _0RL_cd_152d68099248a14c_60000000 _call_desc(_0RL_lcfn_152d68099248a14c_80000000, "_get_moderator", 15);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
Test::_pof_Forum::~_pof_Forum() {}


omniObjRef*
Test::_pof_Forum::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::Test::_objref_Forum(ior, id);
}


::CORBA::Boolean
Test::_pof_Forum::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::Test::Forum::_PD_repoId) )
    return 1;
  
  return 0;
}

const Test::_pof_Forum _the_pof_Test_mForum;

Test::_impl_Forum::~_impl_Forum() {}


::CORBA::Boolean
Test::_impl_Forum::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "postMessage") ) {

    _0RL_cd_152d68099248a14c_00000000 _call_desc(_0RL_lcfn_152d68099248a14c_10000000, "postMessage", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getMessage") ) {

    _0RL_cd_152d68099248a14c_20000000 _call_desc(_0RL_lcfn_152d68099248a14c_30000000, "getMessage", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "removeMessage") ) {

    _0RL_cd_152d68099248a14c_40000000 _call_desc(_0RL_lcfn_152d68099248a14c_50000000, "removeMessage", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "_get_theme") ) {

    _0RL_cd_152d68099248a14c_60000000 _call_desc(_0RL_lcfn_152d68099248a14c_70000000, "_get_theme", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "_get_moderator") ) {

    _0RL_cd_152d68099248a14c_60000000 _call_desc(_0RL_lcfn_152d68099248a14c_80000000, "_get_moderator", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
Test::_impl_Forum::_ptrToInterface(const char* id)
{
  if( id == ::Test::Forum::_PD_repoId )
    return (::Test::_impl_Forum*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::Test::Forum::_PD_repoId) )
    return (::Test::_impl_Forum*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
Test::_impl_Forum::_mostDerivedRepoId()
{
  return ::Test::Forum::_PD_repoId;
}

POA_Test::Forum::~Forum() {}

